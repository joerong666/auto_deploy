[uchas_server]
#listen=[ * | localhost | domain_name | ip ] : port  [backlog=xxx] [ssl]
listen = ${server0}:${port_mgr${i}}
max_connection = 1024
connection_pool_size= 256
request_pool_size = 4096
recv_timeout = 60
client_header_buffer_size = 1024
large_client_buffer_size = 8192
large_client_header_buffer_num = 4
large_client_body_buffer_num = 40
client_recv_body_limit = 0
send_timeout = 60
keepalive_timeout = 75
keepalive_requests = 200
process_expire=60
access_log=1

ssl=0
ssl_certificate=
ssl_certificate_key=
ssl_certificate_key_passwd=
ssl_verify_client=
ssl_verify_depth=
ssl_client_certificate=
ssl_dhparam=
ssl_ecdh_curve=
ssl_ciphers=

[worker_pool]
queue_size = 10000
worker_num = 5 
start_emerg = 0
check_interval = 1
emerg_scale = 0.9 
emerg_long_wait = 2
force_use = 1

[aio]
aio_queue_size = 100
aio_worker_num = 3 

[cache]
max_mem = 4000
lru_samples = 10

[conn_pool]
max_switch_error = 12

[sys]
exit_wait_time = 30



[log]
log_dir = ./log
log_file = mngr_c
log_http = mngr_http_log
#level 0-fatal, 1-error, 2-warning, 3-info, 4-debug
log_level = 3
log_file_len = 100

[lua]
lib_path = ../lib/?.lua;../sys/?.lua;../?.lua;../mngr/?.lua
lib_cpath =../bin/?.so

init =../app_init.lua
#init =../test/test_entry.lua

http_pretreat=../http_pretreat.lua

uchas_worker =../app_entry.lua

time_schedule = [1][1][../mngr/status_loop.lua]
time_schedule = [1][1][../mngr/ds_action_loop.lua]
#time_schedule = [1][1][../../script/deployer_daemon/dd_entry.lua]
#time_schedule = [2][1][/tmp/bbb.lua]
